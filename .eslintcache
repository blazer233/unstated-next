[{"F:\\code_git\\unstated-next\\src\\index.tsx":"1","F:\\code_git\\unstated-next\\src\\reportWebVitals.ts":"2","F:\\code_git\\unstated-next\\src\\App.tsx":"3","F:\\code_git\\unstated-next\\src\\page\\counter.tsx":"4","F:\\code_git\\unstated-next\\src\\state\\CounterContainer.tsx":"5","F:\\code_git\\unstated-next\\src\\page\\todolist.tsx":"6","F:\\code_git\\unstated-next\\src\\state\\TodoListContainer.tsx":"7","F:\\code_git\\unstated-next\\src\\unstated-next\\index.tsx":"8"},{"size":478,"mtime":1607669344547,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1607506692881,"results":"11","hashOfConfig":"10"},{"size":1495,"mtime":1607670226929,"results":"12","hashOfConfig":"10"},{"size":396,"mtime":1607669549812,"results":"13","hashOfConfig":"10"},{"size":433,"mtime":1607669427246,"results":"14","hashOfConfig":"10"},{"size":1528,"mtime":1607669658952,"results":"15","hashOfConfig":"10"},{"size":498,"mtime":1607669715248,"results":"16","hashOfConfig":"10"},{"size":772,"mtime":1607670228247,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"qnxpb9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"F:\\code_git\\unstated-next\\src\\index.tsx",[],["38","39"],"F:\\code_git\\unstated-next\\src\\reportWebVitals.ts",[],"F:\\code_git\\unstated-next\\src\\App.tsx",["40"],"import React from \"react\";\nimport CounterPage from \"./page/counter\";\nimport TodoListPage from \"./page/todolist\";\nimport CounterContainer from \"./state/CounterContainer\";\nimport TodoListContainer from \"./state/TodoListContainer\";\n\n// const compose = (...containers) => props =>\n//   containers.reduceRight(\n//     (children, Container) => (\n//       <Container.Provider>{children}</Container.Provider>\n//     ),\n//     props.children\n//   );\nfunction compose<T>(...containers: T[]) {\n  return function Component(props: any) {\n    console.log(props);\n    return containers.reduceRight((children, Container: any) => {\n      console.log(children, Container, props.children);\n      return <Container.Provider>{children}</Container.Provider>;\n    }, props.children);\n  };\n}\nlet Provider = compose(CounterContainer, TodoListContainer);\n// 放在顶层\nexport default () => {\n  return (\n    <Provider>\n      <CounterPage />\n      <TodoListPage />\n    </Provider>\n  );\n};\n/**\n * 相当于：\n * <CounterContainer.Provider>\n *  <TodoListContainer.Provider>\n     <xxx.Provider>\n         MyApp\n     </xxx.Provider>\n *  </TodoListContainer.Provider>\n * </CounterContainer.Provider>\n */\n\n//嵌套数据多层应用\n// export default () => {\n//   return (\n//     <div>\n//       <CounterContainer.Provider>\n//         <CounterPage />\n//         <TodoListContainer.Provider>\n//           <TodoListPage />\n//         </TodoListContainer.Provider>\n//       </CounterContainer.Provider>\n//     </div>\n//   );\n// };\n","F:\\code_git\\unstated-next\\src\\page\\counter.tsx",["41"],"import React from \"react\";\r\nimport CounterContainer from \"../state/CounterContainer\";\r\n\r\nexport default () => {\r\n  let counter: any = CounterContainer.useContainer();\r\n  console.log(\"数字变化 render\");\r\n  return (\r\n    <div>\r\n      <button onClick={counter.decrement}>-</button>\r\n      <span>{counter.count}</span>\r\n      <button onClick={counter.increment}>+</button>\r\n    </div>\r\n  );\r\n};\r\n","F:\\code_git\\unstated-next\\src\\state\\CounterContainer.tsx",[],"F:\\code_git\\unstated-next\\src\\page\\todolist.tsx",[],"F:\\code_git\\unstated-next\\src\\state\\TodoListContainer.tsx",[],"F:\\code_git\\unstated-next\\src\\unstated-next\\index.tsx",["42"],"import { createContext, createElement, useContext } from \"react\";\r\n\r\nexport default (useHook: (arg0: any) => any) => {\r\n  const Context = createContext<any>(null); //创建共享功能\r\n  const Provider = ({ init, children }: any) => {\r\n    const value = useHook(init); //共享数据和共享方法的对象\r\n    return createElement(Context.Provider, { value }, children);\r\n  };\r\n  /**\r\n   * 调用 xxx.Provider 时相当于创建react元素 等同于返回：\r\n   * <Context.Provider value={useHook(init)}>\r\n   *   {children}\r\n   * </Context.Provider>\r\n   */\r\n\r\n  const useContainer = () => useContext(Context);\r\n  /**\r\n   * 调用 xxx.useContainer 返回所有的 useHook(init) 即共享的值和方法d\r\n   */\r\n  return {\r\n    Provider,\r\n    useContainer,\r\n  };\r\n};\r\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":25,"column":1,"nodeType":"49","endLine":32,"endColumn":3},{"ruleId":"47","severity":1,"message":"48","line":4,"column":1,"nodeType":"49","endLine":14,"endColumn":3},{"ruleId":"47","severity":1,"message":"48","line":3,"column":1,"nodeType":"49","endLine":24,"endColumn":3},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]